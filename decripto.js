const crypto = require('crypto')

const secret = '23f2e5915c973e4717ca205a40d33bba'

const data = `b9aa418329c7dba1f14675f3f8e107eb:8b5b52e9c7a690284ec4471aef119461f4cdc4a95b99993bf945346e17c4c54e975a5fd5fa33cfbb0a445acd0f2e8cfa8f80a782d149ccc9eb4d817d5d71be406d10f123ef1bff2f6b55e849f37d6893b5fbfc952a6aa14710c70dc058645bc9814559a9e06f0ff30668a77b0f535a5a65980a21e90b8188564c05881c7a18e4ec2f9c0b99afd5c7e6abdb51736bec92f5cfa24504680266d6b0219f2611de4cf0c34536851656cf72dbec707314db5c684ea1b7c557c3b8ea268654301686ba2d389d1f34ef820244fc1738e7346df1e1069c38a8c4936987e08149f5ae81459630c80ca9afc36d7cbfdcb9fc5d5168b267e315f20ad6af4016b91ac1e1484d575f73c6a7b963aa36c0da9757290f6172bdc4674e0f70203eb3e2a69b563afb3b4b749760338bd62285fd96baa1ec9ead9880ec1c617920da5634020f57ca314106f5e4c1b0fcd0a32835ee7b8fab82e79fe3ea8620d490993625cbfab57d78d74328ca82ce7a7a0df2798fee6348bc6061a5d0bc67f7997dcd093a2d83bb176633da9fb2c9ada8167be6cb6369494bc2fc8c894100f0a238cde1913715f07cecf2f23eb22f2f9b0ab82310f56d5877417b96cf6d4badb9244055ee850a8a9cc4d058099697fc1646785f1061ac7cc4aa68bd745efe779f248c5f44947eee9167ceba9ab4462052dd5a1d3bca5d37eda24905bc19e8f97fb218e097a08cfcf62b4d069674cc2e4cd83d4a66e6fe1f3bcf441d950bde0323bf1abdda7b2cf7e3bdb281d0c1b0dd73d383758fdf461c3ef2950f2dc59a1bce0105482770223cb43274a4993008844dc2477a25cd737923f2216a93f8c85b8311aaa7a3623833b9aeeeb2ac6851e7beee0ecec4594361a0801d5f811f8145a505e41b0a43d4188cc3ae34a9bef88220d759068d8b58f2a946659219c823f8bdb857680a1036f922f17906692357a580216dbced95713916`

const decrypt = value => {
    const [iv, encrypted] = value.split(':')
    const ivBuffer = Buffer.from(iv, 'hex')
    const decipher = crypto.createDecipheriv('aes-256-cbc', Buffer.from(secret), ivBuffer)
    let content = decipher.update(Buffer.from(encrypted, 'hex'))
    content = Buffer.concat([ content, decipher.final() ])

    return content.toString()
}

console.log(decrypt(data))